% This script is used to train a CNN netwrok by using the training images
% prevesuly generated by realimageedit.m
% Deep Learning toolbox in Matlab is needed to run this script

clc
clear
net=alexnet;

% imds is should be addressed to the folder containg subfolders of the
% disticnt patterns containig teh augmented images previosuly genereated.

imds = imageDatastore(fullfile('C:\','Users','Morteza','Desktop','jannet','training_2'),...
'FileExtensions','.jpg','LabelSource','foldernames','includesubfolders',1);
%  imagesource = augmentedImageSource([227, 227],imds);s
  inputSize = net.Layers(1).InputSize(1:2);
  imds.ReadFcn = @(loc)imresize(imread(loc),inputSize);

% imds=imagesource;
[trainingImages,validationImages] = splitEachLabel(imds,0.7,'randomized');
layersTransfer = net.Layers(1:end-3);
numClasses = numel(categories(trainingImages.Labels));
layers = [
    layersTransfer
    fullyConnectedLayer(numClasses,'WeightLearnRateFactor',20,'BiasLearnRateFactor',20)
    softmaxLayer
    classificationLayer];
miniBatchSize = 10;
numIterationsPerEpoch = floor(numel(trainingImages.Labels)/miniBatchSize);
options = trainingOptions('sgdm',...
    'MiniBatchSize',miniBatchSize,...
    'MaxEpochs',20,... % original was 4
    'InitialLearnRate',1e-4,...
    'Verbose',false,...
    'Plots','training-progress',...
    'ValidationData',validationImages,...
    'ExecutionEnvironment','gpu',...
    'ValidationFrequency',numIterationsPerEpoch);

netTransfer = trainNetwork(trainingImages,layers,options);
predictedLabels = classify(netTransfer,validationImages);

idx = [1 5 10 15];
figure

% accuracy = mean(predictedLabels == testLabels)


valLabels = validationImages.Labels;
accuracy = mean(predictedLabels == valLabels)
